"use strict";exports.id=401,exports.ids=[401],exports.modules={1401:(e,r,o)=>{o.r(r),o.d(r,{apps:()=>A,default:()=>node_modules_open,openApp:()=>openApp});var t=o(1708),n=o(4573),i=o(76760),a=o(73136),s=o(31421),c=o(51455),d=o(48161),l=o(73024);let p,f;function isDocker(){return void 0===p&&(p=function hasDockerEnv(){try{return l.statSync("/.dockerenv"),!0}catch{return!1}}()||function hasDockerCGroup(){try{return l.readFileSync("/proc/self/cgroup","utf8").includes("docker")}catch{return!1}}()),p}function isInsideContainer(){return void 0===f&&(f=(()=>{try{return l.statSync("/run/.containerenv"),!0}catch{return!1}})()||isDocker()),f}const isWsl=()=>{if("linux"!==t.platform)return!1;if(d.release().toLowerCase().includes("microsoft"))return!isInsideContainer();try{return!!l.readFileSync("/proc/version","utf8").toLowerCase().includes("microsoft")&&!isInsideContainer()}catch{return!1}},u=t.env.__IS_WSL_TEST__?isWsl:isWsl();function defineLazyProperty(e,r,o){const define=o=>Object.defineProperty(e,r,{value:o,enumerable:!0,writable:!0});return Object.defineProperty(e,r,{configurable:!0,enumerable:!0,get(){const e=o();return define(e),e},set(e){define(e)}}),e}var m=o(57975);const w=(0,m.promisify)(s.execFile);const g=(0,m.promisify)(s.execFile);async function bundleName(e){return async function runAppleScript(e,{humanReadableOutput:r=!0}={}){if("darwin"!==t.platform)throw new Error("macOS only");const o=r?[]:["-ss"],{stdout:n}=await g("osascript",["-e",e,o]);return n.trim()}(`tell application "Finder" to set app_path to application file id "${e}" as string\ntell application "System Events" to get value of property list item "CFBundleName" of property list file (app_path & ":Contents:Info.plist")`)}const h=(0,m.promisify)(s.execFile),y={AppXq0fevzme2pys62n3e0fbqa7peapykr8v:{name:"Edge",id:"com.microsoft.edge.old"},MSEdgeDHTML:{name:"Edge",id:"com.microsoft.edge"},MSEdgeHTM:{name:"Edge",id:"com.microsoft.edge"},"IE.HTTP":{name:"Internet Explorer",id:"com.microsoft.ie"},FirefoxURL:{name:"Firefox",id:"org.mozilla.firefox"},ChromeHTML:{name:"Chrome",id:"com.google.chrome"},BraveHTML:{name:"Brave",id:"com.brave.Browser"},BraveBHTML:{name:"Brave Beta",id:"com.brave.Browser.beta"},BraveSSHTM:{name:"Brave Nightly",id:"com.brave.Browser.nightly"}};class UnknownBrowserError extends Error{}const x=(0,m.promisify)(s.execFile);async function default_browser_defaultBrowser(){if("darwin"===t.platform){const e=await async function defaultBrowserId(){if("darwin"!==t.platform)throw new Error("macOS only");const{stdout:e}=await w("defaults",["read","com.apple.LaunchServices/com.apple.launchservices.secure","LSHandlers"]),r=/LSHandlerRoleAll = "(?!-)(?<id>[^"]+?)";\s+?LSHandlerURLScheme = (?:http|https);/.exec(e);return r?.groups.id??"com.apple.Safari"}();return{name:await bundleName(e),id:e}}if("linux"===t.platform){const{stdout:e}=await x("xdg-mime",["query","default","x-scheme-handler/http"]),r=e.trim();return{name:r.replace(/.desktop$/,"").replace("-"," ").toLowerCase().replaceAll(/(?:^|\s|-)\S/g,(e=>e.toUpperCase())),id:r}}if("win32"===t.platform)return async function defaultBrowser(e=h){const{stdout:r}=await e("reg",["QUERY"," HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\http\\UserChoice","/v","ProgId"]),o=/ProgId\s*REG_SZ\s*(?<id>\S+)/.exec(r);if(!o)throw new UnknownBrowserError(`Cannot find Windows browser in stdout: ${JSON.stringify(r)}`);const{id:t}=o.groups,n=y[t];if(!n)throw new UnknownBrowserError(`Unknown browser ID: ${t}`);return n}();throw new Error("Only macOS, Linux, and Windows are supported")}const v=i.dirname((0,a.fileURLToPath)("file:///mnt/vss/_work/1/s/node_modules/open/index.js")),E=i.join(v,"xdg-open"),{platform:S,arch:P}=t,b=(()=>{const e="/mnt/";let r;return async function(){if(r)return r;const o="/etc/wsl.conf";let t=!1;try{await c.access(o,c.constants.F_OK),t=!0}catch{}if(!t)return e;const n=await c.readFile(o,{encoding:"utf8"}),i=/(?<!#.*)root\s*=\s*(?<mountPoint>.*)/g.exec(n);return i?(r=i.groups.mountPoint.trim(),r=r.endsWith("/")?r:`${r}/`,r):e}})(),pTryEach=async(e,r)=>{let o;for(const t of e)try{return await r(t)}catch(e){o=e}throw o},baseOpen=async e=>{if(e={wait:!1,background:!1,newInstance:!1,allowNonzeroExitCode:!1,...e},Array.isArray(e.app))return pTryEach(e.app,(r=>baseOpen({...e,app:r})));let r,{name:o,arguments:i=[]}=e.app??{};if(i=[...i],Array.isArray(o))return pTryEach(o,(r=>baseOpen({...e,app:{name:r,arguments:i}})));if("browser"===o||"browserPrivate"===o){const r={"com.google.chrome":"chrome","google-chrome.desktop":"chrome","org.mozilla.firefox":"firefox","firefox.desktop":"firefox","com.microsoft.msedge":"edge","com.microsoft.edge":"edge","microsoft-edge.desktop":"edge"},t={chrome:"--incognito",firefox:"--private-window",edge:"--inPrivate"},n=await default_browser_defaultBrowser();if(n.id in r){const a=r[n.id];return"browserPrivate"===o&&i.push(t[a]),baseOpen({...e,app:{name:A[a],arguments:i}})}throw new Error(`${n.name} is not supported as a default browser`)}const a=[],d={};if("darwin"===S)r="open",e.wait&&a.push("--wait-apps"),e.background&&a.push("--background"),e.newInstance&&a.push("--new"),o&&a.push("-a",o);else if("win32"===S||u&&!isInsideContainer()&&!o){const s=await b();r=u?`${s}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe`:`${t.env.SYSTEMROOT||t.env.windir||"C:\\Windows"}\\System32\\WindowsPowerShell\\v1.0\\powershell`,a.push("-NoProfile","-NonInteractive","-ExecutionPolicy","Bypass","-EncodedCommand"),u||(d.windowsVerbatimArguments=!0);const c=["Start"];e.wait&&c.push("-Wait"),o?(c.push(`"\`"${o}\`""`),e.target&&i.push(e.target)):e.target&&c.push(`"${e.target}"`),i.length>0&&(i=i.map((e=>`"\`"${e}\`""`)),c.push("-ArgumentList",i.join(","))),e.target=n.Buffer.from(c.join(" "),"utf16le").toString("base64")}else{if(o)r=o;else{const e=!v||"/"===v;let o=!1;try{await c.access(E,c.constants.X_OK),o=!0}catch{}r=t.versions.electron??("android"===S||e||!o)?"xdg-open":E}i.length>0&&a.push(...i),e.wait||(d.stdio="ignore",d.detached=!0)}"darwin"===S&&i.length>0&&a.push("--args",...i),e.target&&a.push(e.target);const l=s.spawn(r,a,d);return e.wait?new Promise(((r,o)=>{l.once("error",o),l.once("close",(t=>{!e.allowNonzeroExitCode&&t>0?o(new Error(`Exited with code ${t}`)):r(l)}))})):(l.unref(),l)},openApp=(e,r)=>{if("string"!=typeof e&&!Array.isArray(e))throw new TypeError("Expected a valid `name`");const{arguments:o=[]}=r??{};if(null!=o&&!Array.isArray(o))throw new TypeError("Expected `appArguments` as Array type");return baseOpen({...r,app:{name:e,arguments:o}})};function detectArchBinary(e){if("string"==typeof e||Array.isArray(e))return e;const{[P]:r}=e;if(!r)throw new Error(`${P} is not supported`);return r}function detectPlatformBinary({[S]:e},{wsl:r}){if(r&&u)return detectArchBinary(r);if(!e)throw new Error(`${S} is not supported`);return detectArchBinary(e)}const A={};defineLazyProperty(A,"chrome",(()=>detectPlatformBinary({darwin:"google chrome",win32:"chrome",linux:["google-chrome","google-chrome-stable","chromium"]},{wsl:{ia32:"/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe",x64:["/mnt/c/Program Files/Google/Chrome/Application/chrome.exe","/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe"]}}))),defineLazyProperty(A,"firefox",(()=>detectPlatformBinary({darwin:"firefox",win32:"C:\\Program Files\\Mozilla Firefox\\firefox.exe",linux:"firefox"},{wsl:"/mnt/c/Program Files/Mozilla Firefox/firefox.exe"}))),defineLazyProperty(A,"edge",(()=>detectPlatformBinary({darwin:"microsoft edge",win32:"msedge",linux:["microsoft-edge","microsoft-edge-dev"]},{wsl:"/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe"}))),defineLazyProperty(A,"browser",(()=>"browser")),defineLazyProperty(A,"browserPrivate",(()=>"browserPrivate"));const node_modules_open=(e,r)=>{if("string"!=typeof e)throw new TypeError("Expected a `target`");return baseOpen({...r,target:e})}}};